# frozen_string_literal: true

class ApplicationPolicy
  # We use User for policies because it contains roles for the current account
  # This allows separate roles for each user and account.
  #
  # Defaults:
  # - Allow admins
  # - Deny everyone else

  attr_reader :user, :record

  def initialize(user, record)
    # Comment out to allow guest users
    raise Pundit::NotAuthorizedError, "must be logged in" unless user

    @user = user
    @record = record
  end

  def index?
    user.admin?
  end

  def show?
    user.admin?
  end

  def create?
    user.admin?
  end

  def new?
    create?
  end

  def update?
    user.admin?
  end

  def edit?
    update?
  end

  def destroy?
    user.admin?
  end

  class Scope
    def initialize(user, scope)
      # Comment out to allow guest users
      raise Pundit::NotAuthorizedError, "must be logged in" unless user

      @user = user
      @scope = scope
    end

    def resolve
      scope.all
    end

    private

    attr_reader :user, :scope
  end
end
